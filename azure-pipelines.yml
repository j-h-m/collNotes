trigger:
- master
- topic-collNotes-v2
variables:
  buildConfiguration: 'Release'
  collNotesRepoName: 'j-h-m/collNotes'
  MonoVersion: '6_4_0'

stages:
- stage: Build
  jobs:
  - job: Android_App
    pool:
      vmImage: 'windows-latest'
    steps:
      - task: NuGetToolInstaller@1
        displayName: 'Install NuGet 5.x'
        inputs:
          versionSpec: '5.x'
          checkLatest: true
      - task: NuGetCommand@2
        displayName: 'NuGet restore'
        inputs:
          restoreSolution: '**/*.sln'
      - task: DotNetCoreCLI@2
        displayName: 'dotnet test on test project'
        inputs:
          command: test
          projects: '**/*Tests/*.csproj'
          arguments: '--configuration $(buildConfiguration)'
      - task: XamarinAndroid@1
        displayName: 'Build Android App'
        inputs:
          clean: true
          projectFile: '**/*droid*.csproj'
          outputDirectory: '$(Build.ArtifactStagingDirectory)'
          configuration: '$(buildConfiguration)'
          createAppPackage: true
      - task: AndroidSigning@3
        inputs:
          apkFiles: '**/*.apk'
          apksignerKeystoreFile: 'ad-hoc jacob.keystore'
          apksignerKeystorePassword: '$(apkSignerKeystorePassword)'
          apksignerKeystoreAlias: '$(keyStoreAlias)'
          apksignerKeyPassword: '$(keyPassword)'
      - task: GitHubRelease@1
        inputs:
          gitHubConnection: 'j-h-m'
          repositoryName: '$(collNotesRepoName)'
          action: 'create'
          tag: 'v2.x'
          tagSource: 'gitTag'
          title: 'test apk release'
          isPreRelease: true
          assets: '$(Build.ArtifactStagingDirectory)/*.apk'
  - job: iOS_App
    pool: 
      vmImage: 'macOS-10.14'
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core 3.x'
        inputs:
          packageType: sdk
          version: 3.x
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - task: Bash@3
        displayName: 'Install boots'
        inputs:
          targetType: 'inline'
          script: 'dotnet tool install --global boots'
      - task: Bash@3
        displayName: 'Install mono'
        inputs:
          targetType: 'inline'
          script: 'boots https://download.mono-project.com/archive/6.4.0/macos-10-universal/MonoFramework-MDK-6.4.0.198.macos10.xamarin.universal.pkg'
      - task: Bash@3
        displayName: 'set mono version for build'
        inputs:
          targetType: 'inline'
          script: 'sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(MonoVersion)'
      - task: Bash@3
        displayName: 'set xcode for non-default mono version'
        inputs:
          targetType: 'inline'
          script: echo '##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]'/Applications/Xcode_11.3.app;sudo xcode-select --switch /Applications/Xcode_11.3.app/Contents/Developer
      - task: XamariniOS@2
        displayName: 'Build iOS App'
        inputs:
          clean: true
          solutionFile: '**/*.sln'
          configuration: '$(buildConfiguration)'
          packageApp: false
          buildForSimulator: true
          runNugetRestore: true