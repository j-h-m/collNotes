trigger:
- master
- develop
variables:
  buildConfiguration: 'Release'
  collNotesRepoName: 'j-h-m/collNotes'
  MonoVersion: '5_16_0'
  xcodeRoot: '/Applications/Xcode_10.1.app'
  apkFileName: 'com.thc.collnotes.apk'

stages:
- stage: Build_Test
  jobs:
    - job: 'Android_Build'
      pool:
        vmImage: 'windows-2019'
      steps:
      - task: NuGetToolInstaller@0
        displayName: 'install nuget tool'
        inputs:
          versionSpec: '5.x'
          checkLatest:  true
      - task: NuGetCommand@2
        displayName: 'nuget restore on solution'
        inputs:
          restoreSolution: '**/*.sln'
      - task: DotNetCoreCLI@2
        displayName: 'run tests'
        inputs:
          command: test
          projects: '**/*Tests/*.csproj'
          arguments: '--configuration $(buildConfiguration)'
      - task: XamarinAndroid@1
        displayName: 'build app'
        inputs:
          clean: true
          projectFile: '**/*droid*.csproj'
          outputDirectory: '$(Build.ArtifactStagingDirectory)'
          configuration: '$(buildConfiguration)'
          createAppPackage: true
      - task: PublishPipelineArtifact@1
        displayName: 'publish apk'
        inputs:
          path: $(Build.ArtifactStagingDirectory)/$(apkFileName)
          artifact: android-apk
    - job: 'iOS_Build'
      pool:
        vmImage: 'macOS-10.14'
      steps:
        - script: sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh 6_8_0
          displayName: 'Select Xamarin SDK version 6.8.0'
          enabled: true
        - task: UseDotNet@2
          displayName: 'Use .NET Core 3.1.101'
          inputs:
            packageType: sdk
            version: 3.1.101
            installationPath: $(Agent.ToolsDirectory)/dotnet
        - task: NuGetToolInstaller@1
          displayName: 'Install NuGet tool'
        - task: NuGetCommand@2
          displayName: 'nuget restore on solution'
          inputs:
            restoreSolution: '**/*.sln'
        - task: DotNetCoreCLI@2
          displayName: 'run tests'
          inputs:
            command: test
            projects: '**/*Tests/*.csproj'
            arguments: '--configuration $(buildConfiguration)'
        - task: XamariniOS@2
          displayName: 'Build iOS App'
          inputs:
            clean: true
            solutionFile: '**/*.sln'
            configuration: '$(buildConfiguration)'
            packageApp: false
            buildForSimulator: true
            runNugetRestore: false
- stage: Release
  jobs:
    - job: 'Github_Release'
      pool:
        vmImage: 'windows-latest'
      steps:
      - task: DownloadPipelineArtifact@2
        displayName: 'download apk'
        inputs:
          artifact: android-apk
          path: $(Build.ArtifactStagingDirectory)
      - task: GithubRelease@0
        displayName: 'GitHub Release'
        inputs:
          gitHubConnection: github-j-h-m
          repositoryName: j-h-m/collNotes
          assets: $(Build.ArtifactStagingDirectory)/*.apk